
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java 
7expo.modules.adapters.react.services.EventEmitterModuleCLASS{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ("/
package$expo.modules.adapters.react.services"
isFinalfalse"
inner classfalse"

isAbstractfalse"∫
declarationString§<mark class="modifier">public </mark><mark class="modifier">class </mark>EventEmitterModule<mark class="modifier"><br>implements </mark>EventEmitter, InternalModule"
accesspublic*EventEmitterModule2˛
rexpo.modules.adapters.react.services.EventEmitterModule.EventEmitterModule(com.facebook.react.bridge.ReactContext)DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java	 (2Ì
aexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (2á
{expo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   (2Ú
fexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &(2€
Oexpo.modules.adapters.react.services.EventEmitterModule.getExportedInterfaces()DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java@ @(*2ö
çexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaD; D(Q2›
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ($2π
2expo.modules.core.interfaces.services.EventEmitterEXTEND{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java+ (72≤
+expo.modules.core.interfaces.InternalModuleEXTEND{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java9 (G 

rexpo.modules.adapters.react.services.EventEmitterModule.EventEmitterModule(com.facebook.react.bridge.ReactContext)CONSTRUCTOR{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java	 ("É
declarationStringn<mark class="modifier">public </mark><mark class="method">EventEmitterModule</mark>(ReactContext reactContext)*EventEmitterModule2÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (2Ñ
expo.modules.adapters.react.services.EventEmitterModule.EventEmitterModule(com.facebook.react.bridge.ReactContext)!reactContextCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ( 2â
expo.modules.adapters.react.services.EventEmitterModule.EventEmitterModule(com.facebook.react.bridge.ReactContext)!reactContext	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java) (52√
7expo.modules.adapters.react.services.EventEmitterModuleRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java	 (ù
expo.modules.adapters.react.services.EventEmitterModule.EventEmitterModule(com.facebook.react.bridge.ReactContext)!reactContext	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java) (5"
typeReactContext"
isFinalfalse".
declarationStringReactContext reactContext*reactContext2´
&com.facebook.react.bridge.ReactContextTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ((ò
aexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)METHOD{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ("
isFinalfalse"å
declarationStringˆ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">emit</mark>(String eventName<mark class="modifier"><mark class="modifier">,</mark></mark> Bundle eventBody)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*emit2¸
wcom.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter.emit(java.lang.String, java.lang.Object)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaT (X2À
Fcom.facebook.react.bridge.ReactContext.getJSModule(java.lang.Class<T>)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (2∆
Acom.facebook.react.bridge.Arguments.fromBundle(android.os.Bundle)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javan (x2÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (2
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventNameCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaY (b2Ò
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventBodyCALL|
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javay (Ç2Â
\expo.modules.core.interfaces.services.EventEmitter.emit(java.lang.String, android.os.Bundle)OVERRIDE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (2ı
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventName	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (#2ı
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventBody	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java, (52ê
voidRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java	 (·
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventName	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (#"
typeString"
isFinalfalse"%
declarationStringString eventName*	eventName2ï
java.lang.StringTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java (‚
kexpo.modules.adapters.react.services.EventEmitterModule.emit(java.lang.String, android.os.Bundle)!eventBody	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java, (5"
typeBundle"
isFinalfalse"%
declarationStringBundle eventBody*	eventBody2ñ
android.os.BundleTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java% (+É
{expo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)METHOD{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   ("
isFinalfalse"´
declarationStringï<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">emit</mark>(final <mark class="modifier">int</mark> viewId<mark class="modifier"><mark class="modifier">,</mark></mark> final Event event)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*emit2¸
wcom.facebook.react.uimanager.UIManagerHelper.getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext, int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!7 !(T2Ò
lcom.facebook.react.uimanager.events.EventDispatcher.dispatchEvent(com.facebook.react.uimanager.events.Event)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java" "(2ì
çexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java" "(32÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!U !(b2à
Çexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!d !(j2ò
íexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)?dispatcher@33.26:33.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java" "(2à
Çexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java"4 "(:2á
Åexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!eventCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java"< "(A2ˇ
vexpo.modules.core.interfaces.services.EventEmitter.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)OVERRIDE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   (2ç
Çexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   (#2å
Åexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!event	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java 1  (62ü
íexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)?dispatcher@33.26:33.36DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java! !($2ê
voidRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java 	  (À
íexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)?dispatcher@33.26:33.36VALUE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java! !($"
typeEventDispatcher"
isFinaltrue"€
declarationString≈<mark class="modifier"> </mark><mark class="modifier">final </mark>EventDispatcher <mark class="class-field">dispatcher</mark> = UIManagerHelper.getEventDispatcherForReactTag(mReactContext, viewId)*
dispatcher2∏
3com.facebook.react.uimanager.events.EventDispatcherTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!
 !(2¸
wcom.facebook.react.uimanager.UIManagerHelper.getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext, int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!7 !(T2÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!U !(b2à
Çexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java!d !(j˝
Çexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   (#"
typeint"
isFinaltrue"=
declarationString(<mark class="modifier">int</mark> viewId*viewId2à
intTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java   (ï
Åexpo.modules.adapters.react.services.EventEmitterModule.emit(int, expo.modules.core.interfaces.services.EventEmitter.Event)!event	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java 1  (6"
typeEvent"
isFinaltrue" 
declarationStringEvent event*event2Ω
8expo.modules.core.interfaces.services.EventEmitter.EventTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java +  (0ó/
fexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)METHOD{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &("
isFinalfalse"Ñ
declarationStringÓ<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark><mark class="modifier">void</mark> <mark class="method">emit</mark>(final <mark class="modifier">int</mark> viewId<mark class="modifier"><mark class="modifier">,</mark></mark> final String eventName<mark class="modifier"><mark class="modifier">,</mark></mark> final Bundle eventBody)"
isStaticfalse"
accesspublic"

isAbstractfalse"
typevoid*emit2¸
wcom.facebook.react.uimanager.UIManagerHelper.getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext, int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'7 '(T2Ò
lcom.facebook.react.uimanager.events.EventDispatcher.dispatchEvent(com.facebook.react.uimanager.events.Event)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java( ((2„
^expo.modules.adapters.react.views.ViewManagerAdapterUtils.normalizeEventName(java.lang.String)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java+' +(92É
~com.facebook.react.uimanager.events.RCTEventEmitter.receiveEvent(int, java.lang.String, com.facebook.react.bridge.WritableMap)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0 0($2˙
uexpo.modules.adapters.react.services.EventEmitterModule.Anonymous-1f545ed8-108b-4b78-a5f6-8b562beb15b3.getEventName()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0- 0(92∆
Acom.facebook.react.bridge.Arguments.fromBundle(android.os.Bundle)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0[ 0(e2π
4com.facebook.react.uimanager.events.Event.Event(int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java(! ((J2÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'U '(b2Ú
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'd '(j2Ç
}expo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)?dispatcher@39.26:39.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java( ((2Ú
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java(K ((Q2ı
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventNameCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java+: +(C2∫
¥expo.modules.adapters.react.services.EventEmitterModule.Anonymous-ab4678bf-3af5-45ec-906b-a656d6df74f4.dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)!rctEventEmitterCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0 0(2Ú
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0% 0(+2ı
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventBodyCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0= 0(F2ı
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventBodyCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java0f 0(o2Í
aexpo.modules.core.interfaces.services.EventEmitter.emit(int, java.lang.String, android.os.Bundle)OVERRIDE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &(2˜
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &(#2˙
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventName	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&2 &(;2˙
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventBody	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&J &(S2â
}expo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)?dispatcher@39.26:39.36DECLARATION{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java' '($2ê
voidRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&	 &(ü
}expo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)?dispatcher@39.26:39.36VALUE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java' '($"
typeEventDispatcher"
isFinaltrue"€
declarationString≈<mark class="modifier"> </mark><mark class="modifier">final </mark>EventDispatcher <mark class="class-field">dispatcher</mark> = UIManagerHelper.getEventDispatcherForReactTag(mReactContext, viewId)*
dispatcher2∏
3com.facebook.react.uimanager.events.EventDispatcherTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'
 '(2¸
wcom.facebook.react.uimanager.UIManagerHelper.getEventDispatcherForReactTag(com.facebook.react.bridge.ReactContext, int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'7 '(T2÷
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'U '(b2Ú
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java'd '(jÁ
mexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &(#"
typeint"
isFinaltrue"=
declarationString(<mark class="modifier">int</mark> viewId*viewId2à
intTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java& &(Â
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventName	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&2 &(;"
typeString"
isFinaltrue"%
declarationStringString eventName*	eventName2ï
java.lang.StringTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&+ &(1Ê
pexpo.modules.adapters.react.services.EventEmitterModule.emit(int, java.lang.String, android.os.Bundle)!eventBody	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&J &(S"
typeBundle"
isFinaltrue"%
declarationStringBundle eventBody*	eventBody2ñ
android.os.BundleTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java&C &(IÏ
¥expo.modules.adapters.react.services.EventEmitterModule.Anonymous-7bcd1cda-5c4c-4eb8-a25e-7715c4b67985.dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)!rctEventEmitter	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java/+ /(:"
typeRCTEventEmitter"
isFinalfalse"4
declarationStringRCTEventEmitter rctEventEmitter*rctEventEmitter2∏
3com.facebook.react.uimanager.events.RCTEventEmitterTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java/ /(*Ò
Oexpo.modules.adapters.react.services.EventEmitterModule.getExportedInterfaces()METHOD{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java@ @(*"
isFinalfalse"Æ
declarationStringò<mark class="annotation">@Override</mark> <br><mark class="modifier">public </mark>List&lt;Class&gt; <mark class="method">getExportedInterfaces</mark>()"
isStaticfalse"
accesspublic"

isAbstractfalse"
typeList<Class>*getExportedInterfaces2´
&java.util.Collections.singletonList(T)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaA A($2ö
java.util.ListRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java@	 @(2§
java.lang.ClassRETURN_TYPE_ARGUMENT{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java@ @(˙*
çexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)METHOD{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaD; D(Q"
isFinalfalse"º
declarationString¶<mark class="modifier">private </mark><mark class="modifier">static </mark>com.facebook.react.uimanager.events.Event <mark class="method">getReactEventFromEvent</mark>(final <mark class="modifier">int</mark> viewId<mark class="modifier"><mark class="modifier">,</mark></mark> final Event event)"
isStatictrue"
accessprivate"

isAbstractfalse"1
type)com.facebook.react.uimanager.events.Event*getReactEventFromEvent2„
^expo.modules.adapters.react.views.ViewManagerAdapterUtils.normalizeEventName(java.lang.String)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaH' H(92Ã
Gexpo.modules.core.interfaces.services.EventEmitter.Event.getEventName()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaH@ H(L2É
~com.facebook.react.uimanager.events.RCTEventEmitter.receiveEvent(int, java.lang.String, com.facebook.react.bridge.WritableMap)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaM M($2˙
uexpo.modules.adapters.react.services.EventEmitterModule.Anonymous-c46962b1-8398-47c3-bd63-5c3bec6544af.getEventName()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaM- M(92∆
Acom.facebook.react.bridge.Arguments.fromBundle(android.os.Bundle)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaMG M(Q2Ã
Gexpo.modules.core.interfaces.services.EventEmitter.Event.getEventBody()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaMX M(d2À
Fexpo.modules.core.interfaces.services.EventEmitter.Event.canCoalesce()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaR R( 2–
Kexpo.modules.core.interfaces.services.EventEmitter.Event.getCoalescingKey()CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaW W(%2π
4com.facebook.react.uimanager.events.Event.Event(int)CALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaE E(82ö
îexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaE9 E(?2ô
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!eventCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaH: H(?2∫
¥expo.modules.adapters.react.services.EventEmitterModule.Anonymous-275f9309-d42b-447d-9e8a-e9d300a4c307.dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)!rctEventEmitterCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaM M(2ö
îexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewIdCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaM% M(+2ô
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!eventCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaMR M(W2ô
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!eventCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaR R(2ô
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!eventCALL{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaW W(2ü
îexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaD\ D(b2û
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!event	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaDp D(u2µ
)com.facebook.react.uimanager.events.EventRETURN_TYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaD5 D(:è
îexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!viewId	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaD\ D(b"
typeint"
isFinaltrue"=
declarationString(<mark class="modifier">int</mark> viewId*viewId2à
intTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaDX D([ß
ìexpo.modules.adapters.react.services.EventEmitterModule.getReactEventFromEvent(int, expo.modules.core.interfaces.services.EventEmitter.Event)!event	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaDp D(u"
typeEvent"
isFinaltrue" 
declarationStringEvent event*event2Ω
8expo.modules.core.interfaces.services.EventEmitter.EventTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaDj D(oÏ
¥expo.modules.adapters.react.services.EventEmitterModule.Anonymous-82df5418-c079-454c-ad5a-aefcccf9d722.dispatch(com.facebook.react.uimanager.events.RCTEventEmitter)!rctEventEmitter	PARAMETER{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaL+ L(:"
typeRCTEventEmitter"
isFinalfalse"4
declarationStringRCTEventEmitter rctEventEmitter*rctEventEmitter2∏
3com.facebook.react.uimanager.events.RCTEventEmitterTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.javaL L(*›
Qexpo.modules.adapters.react.services.EventEmitterModule?mReactContext@20.23:20.36VARIABLE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java ($"
isFinalfalse"
typeReactContext"v
declarationStringa<mark class="modifier">private </mark>ReactContext <mark class="class-field">mReactContext</mark>"
isStaticfalse"
accessprivate*mReactContext2´
&com.facebook.react.bridge.ReactContextTYPE{
qnode_modules/expo-modules-core/android/src/main/java/expo/modules/adapters/react/services/EventEmitterModule.java
 (